version: "3.4"
services:

  nestjs:
    restart: always
    build:
      dockerfile: ./Dockefile
      context: ./app/
      target: development
    command: npm run start:debug
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - microservice
    ports: # HOST:CONTAINER
      - 9229:9229
      - 3000:3000
    depends_on:
      - database

  postgres:
    image: postgres:12-alpine
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_DB: "Authentication"
      POSTGRES_USER: "nestjs"
      POSTGRES_PASSWORD_FILE: "/run/secrets/postgres_password"
    secrets:
      - postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PG_USER:-nestjs}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - microservice
      - database
    volumes:
      - ./scripts:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - 8080:8080
    networks:
      - database

networks:
  microservice:
  database:
    external: false

volumes:
  pgdata: {}

secrets:
  postgres_password:
    file: ./POSTGRES_PASSWORD
